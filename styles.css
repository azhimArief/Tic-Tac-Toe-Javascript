*, *::after ,*::before {
    box-sizing: border-box;
} 

:root{
    --cell-size: 100px;
    /* size of X and O 90% size of the grid box*/
    --mark-size: calc(var(--cell-size)* .9);
}

body {
    margin:0;
}

.board {
    /*vw= view width, vh = view height */
    width: 100vw;
    height: 100vh;
    display:grid;
    justify-content:center;
    align-content: center;  
    justify-items: center;
    align-items: center;
    /*for the grid */
    grid-template-columns: repeat(3, auto);
}

.cell {
    /* 1px = 1/96 inch*/
    width: var(--cell-size);
    height : var(--cell-size);
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

/* top side grid to become none*/
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top:none;
}

/* for the box left side grid */
.cell:nth-child(3n + 1) {
    border-left:none;
}

/* for the box right side grid */
.cell:nth-child(3n + 3) {
    border-right:none;
}

/* bottom side grid to become none*/
.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
    border-bottom:none;
}

/* if theres an O or X not allowed symbol will be showned*/
.cell.x,
.cell.circle {
    cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before {
    background-color:black;
}

/* to hover x before clicking*/
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
    background-color:lightgrey;
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover:after {
    content:'';
    position:absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}

/* To make the X symbol*/
.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
    transform: rotate(45deg);
}
.cell.x::after, 
.board.x .cell:not(.x):not(.circle):hover:after {
    transform: rotate(-45deg);
}

/* To make the 0*/
.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
    content:'';
    position:absolute;
    border-radius:50%;
}

/*The outer layer of the 0*/
.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}
/*The inner layer of the O*/
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color:white;
}

/* for the X wins and restrat button centralize*/
.winning-message {
    display: none;
    position: fixed;
    top: 0;
    left:  0;
    right: 0;
    bottom: 0;
    background-color: rgba( 0, 0, 0, .9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;/*flex-direction property defines 
    in which direction the container wants to stack the flex items.*/
} /*rem = Relative to font-size of the root element
em = Relative to the font-size of the element (2em means 2 times the size of the current font)*/

.winning-message button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.winning-message button:hover {
    background-color: black;
    color: white; /*font clor*/
    border-color: white;
}

.winning-message.show {
    display: flex;
}